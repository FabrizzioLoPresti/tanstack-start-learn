/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo/tanstack-query'
import { Route as DemoPrismaRouteImport } from './routes/demo/prisma'
import { Route as DemoOrpcTodoRouteImport } from './routes/demo/orpc-todo'
import { Route as CoursesFetchTanstackQueryMutationZodRouteImport } from './routes/courses/fetch-tanstack-query-mutation-zod'
import { Route as CoursesFetchTanstackQueryRouteImport } from './routes/courses/fetch-tanstack-query'
import { Route as CoursesFetchLoaderDataRouteImport } from './routes/courses/fetch-loader-data'
import { Route as CoursesAboutRouteImport } from './routes/courses/about'
import { Route as ApiSplatRouteImport } from './routes/api.$'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo/start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo/start.api-request'
import { Route as DemoSentryTestingRouteImport } from './routes/demo/sentry.testing'
import { Route as DemoFormSimpleRouteImport } from './routes/demo/form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo/form.address'
import { Route as DemoApiTqTodosRouteImport } from './routes/demo/api.tq-todos'
import { Route as DemoApiNamesRouteImport } from './routes/demo/api.names'
import { Route as CoursesFetchLoaderDataParamsUserIdRouteImport } from './routes/courses/fetch-loader-data-params.$userId'
import { Route as ApiRpcSplatRouteImport } from './routes/api.rpc.$'
import { Route as DemoStartSsrIndexRouteImport } from './routes/demo/start.ssr.index'
import { Route as DemoStartSsrSpaModeRouteImport } from './routes/demo/start.ssr.spa-mode'
import { Route as DemoStartSsrFullSsrRouteImport } from './routes/demo/start.ssr.full-ssr'
import { Route as DemoStartSsrDataOnlyRouteImport } from './routes/demo/start.ssr.data-only'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoPrismaRoute = DemoPrismaRouteImport.update({
  id: '/demo/prisma',
  path: '/demo/prisma',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoOrpcTodoRoute = DemoOrpcTodoRouteImport.update({
  id: '/demo/orpc-todo',
  path: '/demo/orpc-todo',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesFetchTanstackQueryMutationZodRoute =
  CoursesFetchTanstackQueryMutationZodRouteImport.update({
    id: '/courses/fetch-tanstack-query-mutation-zod',
    path: '/courses/fetch-tanstack-query-mutation-zod',
    getParentRoute: () => rootRouteImport,
  } as any)
const CoursesFetchTanstackQueryRoute =
  CoursesFetchTanstackQueryRouteImport.update({
    id: '/courses/fetch-tanstack-query',
    path: '/courses/fetch-tanstack-query',
    getParentRoute: () => rootRouteImport,
  } as any)
const CoursesFetchLoaderDataRoute = CoursesFetchLoaderDataRouteImport.update({
  id: '/courses/fetch-loader-data',
  path: '/courses/fetch-loader-data',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesAboutRoute = CoursesAboutRouteImport.update({
  id: '/courses/about',
  path: '/courses/about',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSplatRoute = ApiSplatRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoSentryTestingRoute = DemoSentryTestingRouteImport.update({
  id: '/demo/sentry/testing',
  path: '/demo/sentry/testing',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiTqTodosRoute = DemoApiTqTodosRouteImport.update({
  id: '/demo/api/tq-todos',
  path: '/demo/api/tq-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiNamesRoute = DemoApiNamesRouteImport.update({
  id: '/demo/api/names',
  path: '/demo/api/names',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesFetchLoaderDataParamsUserIdRoute =
  CoursesFetchLoaderDataParamsUserIdRouteImport.update({
    id: '/courses/fetch-loader-data-params/$userId',
    path: '/courses/fetch-loader-data-params/$userId',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiRpcSplatRoute = ApiRpcSplatRouteImport.update({
  id: '/api/rpc/$',
  path: '/api/rpc/$',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrIndexRoute = DemoStartSsrIndexRouteImport.update({
  id: '/demo/start/ssr/',
  path: '/demo/start/ssr/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrSpaModeRoute = DemoStartSsrSpaModeRouteImport.update({
  id: '/demo/start/ssr/spa-mode',
  path: '/demo/start/ssr/spa-mode',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrFullSsrRoute = DemoStartSsrFullSsrRouteImport.update({
  id: '/demo/start/ssr/full-ssr',
  path: '/demo/start/ssr/full-ssr',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrDataOnlyRoute = DemoStartSsrDataOnlyRouteImport.update({
  id: '/demo/start/ssr/data-only',
  path: '/demo/start/ssr/data-only',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/api/$': typeof ApiSplatRoute
  '/courses/about': typeof CoursesAboutRoute
  '/courses/fetch-loader-data': typeof CoursesFetchLoaderDataRoute
  '/courses/fetch-tanstack-query': typeof CoursesFetchTanstackQueryRoute
  '/courses/fetch-tanstack-query-mutation-zod': typeof CoursesFetchTanstackQueryMutationZodRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/prisma': typeof DemoPrismaRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/courses/fetch-loader-data-params/$userId': typeof CoursesFetchLoaderDataParamsUserIdRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/sentry/testing': typeof DemoSentryTestingRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/api/$': typeof ApiSplatRoute
  '/courses/about': typeof CoursesAboutRoute
  '/courses/fetch-loader-data': typeof CoursesFetchLoaderDataRoute
  '/courses/fetch-tanstack-query': typeof CoursesFetchTanstackQueryRoute
  '/courses/fetch-tanstack-query-mutation-zod': typeof CoursesFetchTanstackQueryMutationZodRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/prisma': typeof DemoPrismaRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/courses/fetch-loader-data-params/$userId': typeof CoursesFetchLoaderDataParamsUserIdRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/sentry/testing': typeof DemoSentryTestingRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/api/$': typeof ApiSplatRoute
  '/courses/about': typeof CoursesAboutRoute
  '/courses/fetch-loader-data': typeof CoursesFetchLoaderDataRoute
  '/courses/fetch-tanstack-query': typeof CoursesFetchTanstackQueryRoute
  '/courses/fetch-tanstack-query-mutation-zod': typeof CoursesFetchTanstackQueryMutationZodRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/prisma': typeof DemoPrismaRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/courses/fetch-loader-data-params/$userId': typeof CoursesFetchLoaderDataParamsUserIdRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/sentry/testing': typeof DemoSentryTestingRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr/': typeof DemoStartSsrIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/api/$'
    | '/courses/about'
    | '/courses/fetch-loader-data'
    | '/courses/fetch-tanstack-query'
    | '/courses/fetch-tanstack-query-mutation-zod'
    | '/demo/orpc-todo'
    | '/demo/prisma'
    | '/demo/tanstack-query'
    | '/api/rpc/$'
    | '/courses/fetch-loader-data-params/$userId'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/sentry/testing'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/api/$'
    | '/courses/about'
    | '/courses/fetch-loader-data'
    | '/courses/fetch-tanstack-query'
    | '/courses/fetch-tanstack-query-mutation-zod'
    | '/demo/orpc-todo'
    | '/demo/prisma'
    | '/demo/tanstack-query'
    | '/api/rpc/$'
    | '/courses/fetch-loader-data-params/$userId'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/sentry/testing'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  id:
    | '__root__'
    | '/'
    | '/api/$'
    | '/courses/about'
    | '/courses/fetch-loader-data'
    | '/courses/fetch-tanstack-query'
    | '/courses/fetch-tanstack-query-mutation-zod'
    | '/demo/orpc-todo'
    | '/demo/prisma'
    | '/demo/tanstack-query'
    | '/api/rpc/$'
    | '/courses/fetch-loader-data-params/$userId'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/sentry/testing'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApiSplatRoute: typeof ApiSplatRoute
  CoursesAboutRoute: typeof CoursesAboutRoute
  CoursesFetchLoaderDataRoute: typeof CoursesFetchLoaderDataRoute
  CoursesFetchTanstackQueryRoute: typeof CoursesFetchTanstackQueryRoute
  CoursesFetchTanstackQueryMutationZodRoute: typeof CoursesFetchTanstackQueryMutationZodRoute
  DemoOrpcTodoRoute: typeof DemoOrpcTodoRoute
  DemoPrismaRoute: typeof DemoPrismaRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ApiRpcSplatRoute: typeof ApiRpcSplatRoute
  CoursesFetchLoaderDataParamsUserIdRoute: typeof CoursesFetchLoaderDataParamsUserIdRoute
  DemoApiNamesRoute: typeof DemoApiNamesRoute
  DemoApiTqTodosRoute: typeof DemoApiTqTodosRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
  DemoSentryTestingRoute: typeof DemoSentryTestingRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
  DemoStartSsrDataOnlyRoute: typeof DemoStartSsrDataOnlyRoute
  DemoStartSsrFullSsrRoute: typeof DemoStartSsrFullSsrRoute
  DemoStartSsrSpaModeRoute: typeof DemoStartSsrSpaModeRoute
  DemoStartSsrIndexRoute: typeof DemoStartSsrIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/prisma': {
      id: '/demo/prisma'
      path: '/demo/prisma'
      fullPath: '/demo/prisma'
      preLoaderRoute: typeof DemoPrismaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/orpc-todo': {
      id: '/demo/orpc-todo'
      path: '/demo/orpc-todo'
      fullPath: '/demo/orpc-todo'
      preLoaderRoute: typeof DemoOrpcTodoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/fetch-tanstack-query-mutation-zod': {
      id: '/courses/fetch-tanstack-query-mutation-zod'
      path: '/courses/fetch-tanstack-query-mutation-zod'
      fullPath: '/courses/fetch-tanstack-query-mutation-zod'
      preLoaderRoute: typeof CoursesFetchTanstackQueryMutationZodRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/fetch-tanstack-query': {
      id: '/courses/fetch-tanstack-query'
      path: '/courses/fetch-tanstack-query'
      fullPath: '/courses/fetch-tanstack-query'
      preLoaderRoute: typeof CoursesFetchTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/fetch-loader-data': {
      id: '/courses/fetch-loader-data'
      path: '/courses/fetch-loader-data'
      fullPath: '/courses/fetch-loader-data'
      preLoaderRoute: typeof CoursesFetchLoaderDataRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/about': {
      id: '/courses/about'
      path: '/courses/about'
      fullPath: '/courses/about'
      preLoaderRoute: typeof CoursesAboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/sentry/testing': {
      id: '/demo/sentry/testing'
      path: '/demo/sentry/testing'
      fullPath: '/demo/sentry/testing'
      preLoaderRoute: typeof DemoSentryTestingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/tq-todos': {
      id: '/demo/api/tq-todos'
      path: '/demo/api/tq-todos'
      fullPath: '/demo/api/tq-todos'
      preLoaderRoute: typeof DemoApiTqTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/names': {
      id: '/demo/api/names'
      path: '/demo/api/names'
      fullPath: '/demo/api/names'
      preLoaderRoute: typeof DemoApiNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/fetch-loader-data-params/$userId': {
      id: '/courses/fetch-loader-data-params/$userId'
      path: '/courses/fetch-loader-data-params/$userId'
      fullPath: '/courses/fetch-loader-data-params/$userId'
      preLoaderRoute: typeof CoursesFetchLoaderDataParamsUserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/rpc/$': {
      id: '/api/rpc/$'
      path: '/api/rpc/$'
      fullPath: '/api/rpc/$'
      preLoaderRoute: typeof ApiRpcSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/': {
      id: '/demo/start/ssr/'
      path: '/demo/start/ssr'
      fullPath: '/demo/start/ssr'
      preLoaderRoute: typeof DemoStartSsrIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/spa-mode': {
      id: '/demo/start/ssr/spa-mode'
      path: '/demo/start/ssr/spa-mode'
      fullPath: '/demo/start/ssr/spa-mode'
      preLoaderRoute: typeof DemoStartSsrSpaModeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/full-ssr': {
      id: '/demo/start/ssr/full-ssr'
      path: '/demo/start/ssr/full-ssr'
      fullPath: '/demo/start/ssr/full-ssr'
      preLoaderRoute: typeof DemoStartSsrFullSsrRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/data-only': {
      id: '/demo/start/ssr/data-only'
      path: '/demo/start/ssr/data-only'
      fullPath: '/demo/start/ssr/data-only'
      preLoaderRoute: typeof DemoStartSsrDataOnlyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApiSplatRoute: ApiSplatRoute,
  CoursesAboutRoute: CoursesAboutRoute,
  CoursesFetchLoaderDataRoute: CoursesFetchLoaderDataRoute,
  CoursesFetchTanstackQueryRoute: CoursesFetchTanstackQueryRoute,
  CoursesFetchTanstackQueryMutationZodRoute:
    CoursesFetchTanstackQueryMutationZodRoute,
  DemoOrpcTodoRoute: DemoOrpcTodoRoute,
  DemoPrismaRoute: DemoPrismaRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ApiRpcSplatRoute: ApiRpcSplatRoute,
  CoursesFetchLoaderDataParamsUserIdRoute:
    CoursesFetchLoaderDataParamsUserIdRoute,
  DemoApiNamesRoute: DemoApiNamesRoute,
  DemoApiTqTodosRoute: DemoApiTqTodosRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
  DemoSentryTestingRoute: DemoSentryTestingRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
  DemoStartSsrDataOnlyRoute: DemoStartSsrDataOnlyRoute,
  DemoStartSsrFullSsrRoute: DemoStartSsrFullSsrRoute,
  DemoStartSsrSpaModeRoute: DemoStartSsrSpaModeRoute,
  DemoStartSsrIndexRoute: DemoStartSsrIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
